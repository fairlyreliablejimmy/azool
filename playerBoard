class playerBoardRow(object):
    max = 0
    count = 0
    color = 5
    
    #constructor that first makes the object
    def __init__(self, max_i, count):
        self.max = max_i
        self.color = 5
        self.count = count
        
    def setColor(self, color):
        if color == 'blue':
            self.color=0
        elif color == 'yellow':
            self.color=1
        elif color == 'red':
            self.color=2
        elif color == 'black':
            self.color=3
        elif color == 'white':
            self.color=4
    def getColor(self):
        if self.color == 0:
            return 'blue'
        elif self.color == 1:
            return 'yellow'
        elif self.color == 2:
            return 'red'
        elif self.color == 3:
            return 'black'
        elif self.color == 4:
            return 'white'
        
    def getMax(self):
        return self.max
    def setMax(self, max_i):
        self.max = max_i
        
    def getCount(self):
        return self.count
    def setCount(self, count):
        if count > self.getMax():
            print('the count is too big!  D:')
        else:
            self.count = count
        
    #this represents the object as a string
    def __repr__(self):
        string = ''
        for spaces in range(5-self.max):
            string += '   '
        for blanks in range(self.max-self.count):
            string += '[ ]'
        for tiles in range(self.count):
            if self.getColor() == 'blue':
                string += '[b]'
            elif self.getColor() == 'yellow':
                string += '[y]'
            elif self.getColor() == 'red':
                string += '[r]'
            elif self.getColor() == 'black':
                string += '[b]'
            elif self.getColor() == 'white':
                string += '[w]'
        return string

PatternLines = []
for row in range(1,6):
    PatternLines.append(playerBoardRow(row, 0))
PatternLines[1].setCount(1)
PatternLines[1].setColor('blue')  
PatternLines[3].setCount(3)
PatternLines[3].setColor('red')  
#For call PatterLines in an interactive environment to see the board, print doesn't work well yet.
